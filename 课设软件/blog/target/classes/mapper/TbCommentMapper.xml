<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yycoder.blog.dao.TbCommentMapper">
  <resultMap id="BaseResultMap" type="com.yycoder.blog.entity.TbComment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
  </resultMap>
  <resultMap id="commentMap" type="com.yycoder.blog.vo.CommentsVo">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="blog_title" jdbcType="VARCHAR" property="blogTitle" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, blog_id, user_id, comment_content, comment_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
<!--  <select id="getCommentsVoList" resultType="com.yycoder.blog.vo.CommentsVo">-->
<!--    select tc.comment_id as commentId,tc.comment_time as commentTime,tc.comment_content as commentContent,-->
<!--            tu.user_id as userId,tu.user_name as userName,tu.user_email as userEmail,tb.blog_id as blogId,-->
<!--            tb.blog_title as blogTitle-->
<!--    from tb_comment tc-->
<!--    left join tb_blog tb on tb.blog_id=tc.blog_id-->
<!--    left join tb_user tu on tu.user_id=tc.user_id-->
<!--  </select>-->

  <select id="getCommentCount"  parameterType="Integer" resultType="Integer">
    select count(*)
    from tb_comment
    where blog_id=#{blogId}
  </select>
<!--  <select id="getCommentsList"  parameterType="Integer" resultType="com.yycoder.blog.vo.CommentsVo">-->
<!--    select tc.comment_id as commentId,tc.comment_time as commentTime,tc.comment_content as commentContent,-->
<!--            tu.user_id as userId,tu.user_name as userName,tu.user_email as userEmail,tb.blog_id as blogId,-->
<!--            tb.blog_title as blogTitle-->
<!--    from tb_comment tc-->
<!--    left join tb_blog tb on tb.blog_id=tc.blog_id-->
<!--    left join tb_user tu on tu.user_id=tc.user_id-->
<!--    where tc.blog_id=#{blogId}-->
<!--  </select>-->
  <insert id="insert" parameterType="com.yycoder.blog.entity.TbComment">
    insert into tb_comment (comment_id, blog_id, user_id, 
      comment_content, comment_time)
    values (#{commentId,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{commentContent,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yycoder.blog.entity.TbComment">
    insert into tb_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentTime != null">
        comment_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="blogId != null">
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yycoder.blog.entity.TbComment">
    update tb_comment
    <set>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yycoder.blog.entity.TbComment">
    update tb_comment
    set blog_id = #{blogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>